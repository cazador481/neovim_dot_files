snippet try "try catch"
try
{
	$1
}
catch
{
	$2;
};
endsnippet
snippet has "Moose has"
has $1 => ( 
   isa => $2,
   is => $3,
   default=>$4,
   builder=>$5,
);
endsnippet

snippet method "sub method"
=method $1

${2:Description goes here}

=for Paramters
* ${3: Param goes here}

Returns: 
* ${$4: N/A}

=cut

sub $1 
{
	my $self=shift;
	${3:${VISUAL}}
}
endsnippet
snippet sub "subroutine"
sub $1 
{
	${2:${VISUAL}}
}
endsnippet

snippet moo_role "role"
package $1;
use strict;
use warnings;
use Moo::Role;

$2

1;
endsnippet

snippet #! "run perl"
#!/home/utils/perl-5.22/5.22.0-008/bin/perl
endsnippet

snippet modulino
use lib '/home/nv/utils/perl-modules/NV-MooX-Modulino/1.0.2/lib/perl5/';

package $1;
use Moo;
with 'NV::MooX::Modulino';
with 'MooX::Log::Any'; # enables ->log from Log::Any, optional
with 'NV::MooX::Modulino::Log4perl'; #enables log4perl, optional


#this gets run 
sub run  {
    my $self=shift;
} 


$1->_modulino({},caller);
endsnippet
